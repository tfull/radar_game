server: サーバーのIPアドレス
port: ポート番号
name: 自分の名前

起動方法
<Server>
java -cp .:bin game.Server ${port}
<Client>
java -cp .:bin game.CLIClient ${server} ${port} [${name}]
java -cp .:bin game.GUIClient ${server} ${port} [${name}]
で起動

接続に成功すると，船の配置ができる。
<CUIの場合>
船の配置
command: に対し，
set $1 $2 $3 
    $1は1~5の数字，船の長さはそれぞれ2,3,3,4,5
    $2は座標，F5のように指定。船の左上をあわせる。
    $3は0か1で，船の向き。0は縦，1は横
remove $1
    $1は座標で，そこにある船を取り除ける。左上でない所を指定しても可。$1に1~5を選択すると，対応する船が除去される。
random
    配置されていない船をランダムに配置する。
reset
    船を全部除去する。
OK 配置を終了する。

配置が終了すると，待ち状態になる。相手を待つ。
相手も配置を終了すると，場が表示される。

Attackのとき，座標を入力。
Receiveのとき，相手の攻撃を待つ。

Hitのとき，Attack側にはoが付き，Receive側は船の数字が@で塗られる。
Hit and Sinkのとき，Attack側には船の種類が公開され，Receive側はHitと同様。
Blankのとき，両方にxが表示。

片方の全部の船がSinkすると終了。
自分が負けた場合，解答が表示される。自分が打撃できなかった場所は[]で囲まれる。

python input.py で入力を自動生成できる。

<GUIの場合>
船の配置：青いマスをクリックすると，赤になる。そのまま場所を選択すると，そこを左上として船を配置できる。
    左クリック 縦に配置
    右クリック 横に配置
randomとresetはCLIと同じ。
removeをクリックすると，removeが黄色くなる。この状態では場所やマスをクリックすると船を取り除ける。黄色い状態からさらにremoveをクリックすると，戻る。

対戦
Attackとでたら，場所をクリック。
Receiveなら待つ。

Hitのとき，場所にHitとでる。船が沈むと，その船が表示される。
Blankのときはxが表示される。

片方の全部の船がSinkすると終了で，
自分が負けた場合，解答が表示される。





